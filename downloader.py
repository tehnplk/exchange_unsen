#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ExchangeUnsen Downloader - ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏ü‡∏•‡πå
"""

import sys
import os
import requests
import shutil
import time
import subprocess
import psutil
from pathlib import Path

def print_with_delay(message, delay=0.5):
    """‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏° delay"""
    print(message)
    time.sleep(delay)

def download_file(url, output_path, backup_path=None):
    """‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏™‡∏î‡∏á progress"""
    try:
        print_with_delay("üîó ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå...")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
        response = requests.head(url, timeout=10)
        response.raise_for_status()
        
        file_size = int(response.headers.get('content-length', 0))
        print_with_delay(f"üì¶ ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå: {file_size // (1024*1024):.1f} MB")
        
        # ‡∏Ç‡πâ‡∏≤‡∏° backup ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°
        if os.path.exists(output_path):
            print_with_delay(f"‚ÑπÔ∏è ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏õ‡πá‡∏ô: {output_path}")
            print_with_delay("‚ÑπÔ∏è ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏•‡∏ö")
        
        # ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
        print_with_delay("‚¨áÔ∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î...")
        temp_path = output_path + ".tmp"
        
        response = requests.get(url, stream=True, timeout=30,
                              headers={'User-Agent': 'ExchangeUnsen-Downloader/1.0'})
        response.raise_for_status()
        
        downloaded = 0
        with open(temp_path, 'wb') as file:
            for chunk in response.iter_content(chunk_size=8192):
                if chunk:
                    file.write(chunk)
                    downloaded += len(chunk)
                    
                    if file_size > 0:
                        percent = (downloaded / file_size) * 100
                        # ‡πÅ‡∏™‡∏î‡∏á progress ‡∏ó‡∏∏‡∏Å 10%
                        if int(percent) % 10 == 0 and int(percent) != 0:
                            print(f"üìä Progress: {int(percent)}%")
        
        print_with_delay("‚úÖ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà (‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°)
        print_with_delay("ÔøΩ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà...")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if os.path.exists(output_path):
            print_with_delay(f"‚ö†Ô∏è ‡πÑ‡∏ü‡∏•‡πå {output_path} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö...")
            
            # ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ version code ‡πÉ‡∏´‡∏°‡πà)
            max_attempts = 3
            for attempt in range(max_attempts):
                try:
                    os.remove(output_path)
                    break
                except (OSError, PermissionError) as e:
                    if attempt == max_attempts - 1:
                        # ‡∏ñ‡πâ‡∏≤‡∏•‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà
                        import time
                        timestamp = int(time.time())
                        new_output_path = output_path.replace('.exe', f'_{timestamp}.exe')
                        print_with_delay(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏î‡πâ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô: {new_output_path}")
                        output_path = new_output_path
                        break
                    print_with_delay(f"‚ö†Ô∏è ‡∏•‡∏≠‡∏á‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á... ({attempt + 1}/{max_attempts})")
                    time.sleep(1)
        
        shutil.move(temp_path, output_path)        
        print_with_delay("üéâ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
        return True
        
    except requests.exceptions.RequestException as e:
        print_with_delay(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠: {e}")
        return False
    except Exception as e:
        print_with_delay(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        
        # ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå temp ‡∏´‡∏≤‡∏Å‡∏°‡∏µ
        temp_path = output_path + ".tmp"
        if os.path.exists(temp_path):
            try:
                os.remove(temp_path)
                print_with_delay("üßπ ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÅ‡∏•‡πâ‡∏ß")
            except:
                pass
        
        return False

def wait_for_file_release(file_path, max_wait=30):
    """‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏ü‡∏•‡πå‡∏ñ‡∏π‡∏Å‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏à‡∏≤‡∏Å process ‡∏≠‡∏∑‡πà‡∏ô"""
    print_with_delay(f"‚è≥ ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏ü‡∏•‡πå {file_path} ‡∏ñ‡∏π‡∏Å‡∏õ‡∏•‡πà‡∏≠‡∏¢...")
    
    for attempt in range(max_wait):
        try:
            # ‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            with open(file_path, 'r+b'):
                pass
            print_with_delay("‚úÖ ‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç")
            return True
        except (IOError, OSError, PermissionError):
            # ‡πÑ‡∏ü‡∏•‡πå‡∏¢‡∏±‡∏á‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà
            if attempt == 0:
                print_with_delay("‚ö†Ô∏è ‡πÑ‡∏ü‡∏•‡πå‡∏¢‡∏±‡∏á‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠...")
            
            # ‡∏•‡∏≠‡∏á‡∏´‡∏≤ process ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡∏∞‡∏õ‡∏¥‡∏î
            try:
                file_absolute = os.path.abspath(file_path)
                killed_any = False
                
                for proc in psutil.process_iter(['pid', 'name', 'exe']):
                    try:
                        if proc.info['exe'] and os.path.abspath(proc.info['exe']) == file_absolute:
                            print_with_delay(f"üîß ‡∏õ‡∏¥‡∏î process: {proc.info['name']} (PID: {proc.info['pid']})")
                            proc.terminate()
                            killed_any = True
                    except (psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess):
                        continue
                
                if killed_any:
                    time.sleep(2)  # ‡∏£‡∏≠‡πÉ‡∏´‡πâ process ‡∏õ‡∏¥‡∏î‡∏à‡∏£‡∏¥‡∏á
                    
            except Exception as e:
                print_with_delay(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏´‡∏≤ process ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå: {e}")
            
            time.sleep(1)
            print(f"‚è≥ ‡∏£‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà {attempt + 1}/{max_wait}...")
    
    print_with_delay("‚ùå ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏≠ ‡πÑ‡∏ü‡∏•‡πå‡∏¢‡∏±‡∏á‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà")
    return False

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("="*50)
    print("  ExchangeUnsen Downloader v1.0")
    print("="*50)
    print()
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö arguments
    if len(sys.argv) < 3:
        print("‚ùå Usage: downloader.exe <download_url> <output_file>")
        print("üìù Example: downloader.exe https://github.com/.../ExchangeUnsen.exe ExchangeUnsen.exe")
        input("\nPress Enter to exit...")
        sys.exit(1)
    
    download_url = sys.argv[1]
    output_file = sys.argv[2]
    # ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ backup_file ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°
    
    print(f"üéØ Target: {output_file}")
    print(f"üåê URL: {download_url}")
    print("‚ÑπÔ∏è ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°")
    print()
    
    # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î (‡πÑ‡∏°‡πà‡∏™‡πà‡∏á backup_file)
    success = download_file(download_url, output_file)
    
    if success:
        print()
        print("="*50)
        print("  üéâ ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!")
        print("="*50)
        print()
        
        # ‡∏ñ‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        try:
            choice = input("‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (Y/n): ").strip().lower()
            if choice in ['', 'y', 'yes']:
                print_with_delay("üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà...")
                subprocess.Popen([output_file])
                print_with_delay("‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡πâ‡∏ß")
        except KeyboardInterrupt:
            print("\nüëã ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
    else:
        print()
        print("="*50)
        print("  ‚ùå ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")
        print("="*50)
        input("\nPress Enter to exit...")
        sys.exit(1)
    
    print()
    print("üëã ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ ExchangeUnsen Downloader")
    time.sleep(2)

if __name__ == "__main__":
    main()
