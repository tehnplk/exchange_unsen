#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏õ Google Apps Script
"""

import sys
import requests
from config import APP_CONFIG

def post_version_to_api(version_name=None, version_code=None, release_date=None):
    """
    POST ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏õ‡∏¢‡∏±‡∏á Google Apps Script API
    
    Args:
        version_name (str): ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å config.py)
        version_code (int): ‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å config.py)
        release_date (str): ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏•‡πà‡∏≠‡∏¢ (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å config.py)
    """
    # ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å config ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏
    if version_name is None:
        version_name = APP_CONFIG.get('version', '1.0.0')
    
    if version_code is None:
        version_code = APP_CONFIG.get('version_code')
        if version_code is None:
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á version_code ‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô config
            try:
                parts = version_name.split('.')
                version_code = int(''.join(parts))
            except:
                version_code = 1
    
    if release_date is None:
        release_date = APP_CONFIG.get('release', '')
    
    api_url = "https://script.google.com/macros/s/AKfycbyzveWCcGt4GOQgVF8CUVF6I2Fzmz8x7Ds4BASTXPSh6VC1ErxTxv_KGjsaG7q4rNTLAw/exec"
    
    try:
        print(f"üì§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô {version_name} (code: {version_code}) ‡πÑ‡∏õ‡∏¢‡∏±‡∏á API...")
        
        data = {
            'version_name': version_name,
            'version_code': version_code,
            'release': release_date,
            'action': 'add'
        }
        
        response = requests.post(api_url, json=data, timeout=15)
        
        print(f"üìã Status Code: {response.status_code}")
        print(f"üìã Response: {response.text}")
        
        if response.status_code == 200:
            print(f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô {version_name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            return True
        else:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: HTTP {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")
        return False

if __name__ == "__main__":
    # ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å command line
    if len(sys.argv) > 1:
        version_name = sys.argv[1]
        version_code = int(sys.argv[2]) if len(sys.argv) > 2 else None
        release_date = sys.argv[3] if len(sys.argv) > 3 else None
        post_version_to_api(version_name, version_code, release_date)
    else:
        # ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å config.py
        post_version_to_api()
